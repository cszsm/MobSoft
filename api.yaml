swagger: '2.0'
info:
  version: 1.0.0
  title: Coffee
paths:
  /coffee:
    post:
      tags:
      - coffee
      summary: Add a new coffee
      operationId: addCoffee
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Coffee object that needs to be added
        required: true
        schema:
          $ref: '#/definitions/Coffee'
      responses:
        405:
          description: Invalid input
  /coffee/{coffeeId}:
    get:
      tags:
      - coffee
      summary: Find coffee by ID
      description: Returns a single coffee
      operationId: getCoffeeById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: coffeeId
        in: path
        description: ID of coffee to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Coffee'
        400:
          description: Invalid ID supplied
        404:
          description: Coffee not found
    delete:
      tags:
      - coffee
      summary: Deletes a coffee
      operationId: deleteCoffee
      produces:
      - application/json
      - application/xml
      parameters:
      - name: api_key
        in: header
        required: false
        type: string
      - name: coffeeId
        in: path
        description: Coffee id to delete
        required: true
        type: integer
        format: int64
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Coffee not found
  /user:
    post:
      tags:
      - user
      summary: Add a new user
      operationId: addUser
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: User object that needs to be added
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        405:
          description: Invalid input
  /user/{userId}:
    get:
      tags:
      - user
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: userId
        in: path
        description: ID of user to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid ID supplied
        404:
          description: User not found
definitions:
  Coffee:
    type: object
    required:
    - name
    - ingredients
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      ingredients:
        type: array
        items:
          type: string
      preparation:
        type: string
  User:
    type: object
    required:
    - username
    - password
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      password:
        type: string
host: virtserver.swaggerhub.com
basePath: /zscseh93/Coffee/1.0.0
schemes:
 - https
 - http